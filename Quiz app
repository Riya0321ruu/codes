import tkinter as tk
from tkinter import messagebox
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
# Sample quiz data       
data = {
    "question": [
        "Who is the father of Computers?",
        "What is smallest unit of the information?",
        "Which of the following language does the computer understand?",
        " Which of the following is the brain of the computer?",
        "Which of the following is the smallest unit of data in a computer?"
    ],
    "options": [
        ["James Gosling", "Charles Babbage", "Dennis Ritchie", "Bjarne Stroustrup"],
        ["A bit", "A byte", "A block", "A nibble"],
        ["Computer understands only C Language", "Computer understands only Assembly Language", "Computer understands only Binary Language", "Computer understands only BASIC"],
        ["Central Processing Unit", "Memory", "Arithmetic and Logic unit", "Control unit"],
        ["Bit", "150,000 km/s", "KB", "Nibble", "Byte"] 
    ],
    "answers": ["Charles Babbage", "A bit", "Computer understands only Binary Language", "Central Processing Unit", "Bit"]
}

class QuizApp:
    def __init__(self, master):
        self.master = master
        self.master.title("AI Quiz")
        
        self.question_index = 0
        self.score = 0
        
        self.question_label = tk.Label(master, text="", wraplength=400)
        self.question_label.pack(pady=20)

        self.var = tk.StringVar()
        self.options = [tk.Radiobutton(master, text="", variable=self.var, value=i) for i in range(4)]
        for option in self.options:
            option.pack(anchor='w')

        self.submit_button = tk.Button(master, text="Submit", command=self.submit_answer)
        self.submit_button.pack(pady=20)

        self.show_question()

    def show_question(self):
        if self.question_index < len(data["question"]):
            self.question_label.config(text=data["question"][self.question_index])
            for i, option in enumerate(self.options):
                option.config(text=data["options"][self.question_index][i])
                option.select()  # Reset selection
        else:
            self.show_result()

    def submit_answer(self):
        selected_answer = self.var.get()
        correct_answer = data["answers"][self.question_index]
        if selected_answer is not None and data["options"][self.question_index][int(selected_answer)] == correct_answer:
            self.score += 1
            
        self.question_index += 1
        self.show_question()

    def show_result(self):
        messagebox.showinfo("Quiz Finished", f"Your score: {self.score}/{len(data['question'])}")
        self.plot_results()

    def plot_results(self):
        labels = ['Correct', 'Incorrect']
        sizes = [self.score, len(data['question']) - self.score]
        plt.figure(figsize=(6, 6))
        plt.pie(sizes, labels=labels, autopct='%1.1f%%', startangle=90)
        plt.axis('equal')  # Equal aspect ratio ensures pie chart is circular.
        plt.title("Quiz Results")
        plt.show()

if __name__ == "__main__":
    root = tk.Tk()
    quiz_app = QuizApp(root)
    root.mainloop()
